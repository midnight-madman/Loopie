name: Run tasks on schedule
on:
  schedule:
    - cron: '0 */2 * * *' # every two hours
    - cron: '0 */4 * * *' # every four hours
    - cron: '0 8,16 * * *' # at 8 and 16 daily
    - cron: '0 0 * * 2,4,6' # at 00:00 on Tuesday, Thursday, and Saturday
  push:
    branches:
      - main
jobs:
  update-data:
    if: ${{ github.event_name == 'schedule' || contains(github.event.head_commit.message, 'force ci') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.9.13
        uses: actions/setup-python@v3
        with:
          python-version: 3.9.13
      - uses: browser-actions/setup-geckodriver@latest
      - run: geckodriver --version
      - name: Install pipenv
        run: |
          pip install pipenv
      - name: Cache files
        id: cache-files
        uses: actions/cache@v3
        with:
          path: data/cache/
          key: ${{ runner.os }}-cache-files
      - name: Cache pipenv virtualenv
        id: cache-pipenv
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install
      - name: Copy tweets to db
        if: github.event.schedule == '0 */2 * * *' || contains(github.event.head_commit.message, 'force ci')
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          pipenv run python scripts/main.py --task-name add-tweets
      - name: Create news items and get update metadata
        if: github.event.schedule == '0 */4 * * *' || contains(github.event.head_commit.message, 'force ci')
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          pipenv run python scripts/main.py --task-name create-news-items
          pipenv run python scripts/main.py --task-name add-news-item-title
          pipenv run python scripts/main.py --task-name add-news-item-tags
      - name: Summarize news items
        if: github.event.schedule == '0 8,16 * * *'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          pipenv run python scripts/main.py --task-name add-news-item-summary
      - name: Update author scores
        if: github.event.schedule == '0 0 * * 2,4,6'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          pipenv run python scripts/main.py --task-name update-author-scores

  deploy-frontend:
    needs: update-data
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
